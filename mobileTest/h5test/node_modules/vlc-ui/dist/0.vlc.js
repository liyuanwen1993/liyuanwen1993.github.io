webpackJsonpvlc([0],{

/***/ 235:
/***/ (function(module, exports, __webpack_require__) {


/* styles */
__webpack_require__(249)

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(242),
  /* template */
  __webpack_require__(244),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),

/***/ 238:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _defineProperty2 = __webpack_require__(5);

var _defineProperty3 = _interopRequireDefault(_defineProperty2);

var _assign = __webpack_require__(3);

var _assign2 = _interopRequireDefault(_assign);

var _util = __webpack_require__(2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var prefixCls = 'vlc-picker-slot'; //
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

exports.default = {
    data: function data() {
        return {
            count: 7, //默认显示行数
            height: 35,
            current: {},
            translateY: 0,
            currentTranslateY: 0,
            dragging: false,
            startX: 0,
            startY: 0,
            delta: { x: 0, y: 0 }
        };
    },

    watch: {
        list: function list(value) {

            if (value.length) {
                var index = this.getSelectedIndex();

                this.current = (0, _assign2.default)({}, this.current, value[index]);
                this.$emit('change', this.target, this.current);
            } else {
                this.translateY = 0;
            }
        },
        initItem: function initItem(value) {

            if (!value) {
                this.current = (0, _assign2.default)({}, this.current, {
                    code: '',
                    target: this.target,
                    index: '',
                    value: ''
                });
                this.$emit('change', this.target, this.current);
            } else {
                this.scrollToItem(value);
            }
        }
    },

    mounted: function mounted() {

        if (!this.initItem && this.initItem !== 0) {
            this.current = (0, _assign2.default)({}, this.current, { code: '', target: this.target, index: '', value: '' });
            this.$emit('change', this.target, this.current);
        } else {

            this.scrollToItem(this.initItem);
        }
    },

    props: {
        styles: Object,
        list: {
            type: Array,
            default: function _default() {
                return [];
            }
        },
        align: {
            type: String,
            default: 'center'
        },
        target: {
            type: String,
            required: true
        },
        initItem: {
            type: [String, Number],
            default: ''
        }
    },
    computed: {
        classes: function classes() {
            return ['' + prefixCls];
        },
        draggingClass: function draggingClass() {
            return [(0, _defineProperty3.default)({}, prefixCls + '-dragging', this.dragging)];
        },

        wrapperHeight: {
            get: function get() {
                return this.count * this.height;
            }
        },
        getStyles: function getStyles() {
            var styles = this.styles;

            if (styles.height) {

                this.height = styles.height / this.count;
            }

            return (0, _assign2.default)({}, styles, { height: this.wrapperHeight });
        }
    },
    methods: {
        _onTouchStart: function _onTouchStart(e) {
            e.preventDefault();
            e.stopPropagation();
            this.currentTranslateY = this.translateY;
            this.startX = e.touches[0].pageX;
            this.startY = e.touches[0].pageY;
            this.dragging = true;
        },
        _onTouchMove: function _onTouchMove(e) {
            e.preventDefault();
            e.stopPropagation();
            this.delta.x = e.touches[0].pageX - this.startX;
            this.delta.y = e.touches[0].pageY - this.startY;
            this.translateY = this.delta.y + this.currentTranslateY;
        },
        _onTouchEnd: function _onTouchEnd(e) {
            e.preventDefault();
            e.stopPropagation();
            this.dragging = false;
            this.currentTranslateY = this.translateY;
            var index = this.getSelectedIndex();
            this.setSelectedItem(index);
        },
        getSelectedIndex: function getSelectedIndex() {
            var height = this.height;
            var maxIndex = this.list.length - 1;
            var index = -Math.round(this.currentTranslateY / height);
            index = Math.max(index, 0);
            index = Math.min(index, maxIndex);
            return index;
        },
        setSelectedItem: function setSelectedItem(index) {

            this.translateY = this.currentTranslateY = -index * this.height;
            try {

                this.current = (0, _assign2.default)({}, this.current, {
                    code: this.list[index].code,
                    value: this.list[index].value,
                    target: this.target,
                    index: index
                });
            } catch (e) {

                this.current = (0, _assign2.default)({}, this.current, {
                    code: '',
                    value: '',
                    target: this.target,
                    index: ''
                });
            }

            this.$emit('change', this.target, this.current);
        },
        scrollToItem: function scrollToItem(code) {
            var _this = this;

            var parent = (0, _util.findComponentUpward)(this, 'AreaPicker');
            this.list.forEach(function (item, i) {
                var currentCode = item.code;
                var currentValue = item.value;
                currentCode = !!parent ? currentCode : currentValue;
                if (currentCode == code) {
                    _this.currentTranslateY = _this.translateY;
                    _this.setSelectedItem(i);
                }
            });
        }
    }
};

/***/ }),

/***/ 239:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = { render: function render() {
    var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;
    return _c('div', {
      class: _vm.classes,
      style: _vm.styles
    }, [_c('ul', {
      class: _vm.draggingClass,
      style: {
        transform: "translate3d(0," + _vm.translateY + "px,0)"
      },
      on: {
        "touchstart": _vm._onTouchStart,
        "touchmove": _vm._onTouchMove,
        "touchend": _vm._onTouchEnd
      }
    }, [_c('li', {
      style: {
        height: _vm.height + 'px'
      }
    }), _vm._v(" "), _c('li', {
      style: {
        height: _vm.height + 'px'
      }
    }), _vm._v(" "), _vm._l(_vm.list, function (item, index) {
      return _c('li', {
        class: {
          'current': index == _vm.current.index,
          'level_1_1': index - _vm.current.index == 1,
          'level_2_1': index - _vm.current.index == 2,
          'level_3_1': index - _vm.current.index >= 3,
          'level_1': index - _vm.current.index == -1,
          'level_2': index - _vm.current.index == -2,
          'level_3': index - _vm.current.index <= -3
        },
        style: {
          textAlign: _vm.align,
          height: _vm.height + 'px'
        }
      }, [_vm._v(_vm._s(item.value) + "\n\n\n\n        ")]);
    }), _vm._v(" "), _c('li', {
      style: {
        height: _vm.height + 'px'
      }
    }), _vm._v(" "), _c('li', {
      style: {
        height: _vm.height + 'px'
      }
    })], 2)]);
  }, staticRenderFns: [] };

/***/ }),

/***/ 240:
/***/ (function(module, exports, __webpack_require__) {

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(238),
  /* template */
  __webpack_require__(239),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),

/***/ 242:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _pickerSlot = __webpack_require__(240);

var _pickerSlot2 = _interopRequireDefault(_pickerSlot);

var _emitter = __webpack_require__(21);

var _emitter2 = _interopRequireDefault(_emitter);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//
//
//
//
//
//
//
//
//
//
//
//
//
//


var DAYS = {
    30: [4, 6, 9, 11],
    31: [1, 3, 5, 7, 8, 10, 12]
};
exports.default = {
    name: 'DatePicker',
    mixins: [_emitter2.default],
    props: {
        initYear: {
            type: [String, Number],
            default: new Date().getFullYear()
        },
        initMonth: {
            type: [String, Number],
            default: new Date().getMonth() + 1
        },
        initDay: {
            type: [String, Number],
            default: new Date().getDate()
        },
        year: {
            type: [Boolean, Array],
            default: true
        },
        month: {
            type: [Boolean, Array],
            default: true
        },
        day: {
            type: [Boolean, Array],
            default: true
        },
        valueSeparator: {
            type: String,
            default: '/'
        }
    },
    data: function data() {
        return {

            currentYear: this.year ? this.initYear : '',
            currentMonth: this.month ? this.initMonth : '',
            currentDay: this.day ? this.initDay : '',
            date: {
                year: {},
                month: {},
                day: {},
                formatDate: ''
            }

        };
    },

    components: {
        PickerSlot: _pickerSlot2.default
    },
    methods: {
        cancle: function cancle() {
            this.dispatch('Picker', 'fail');
        },
        sure: function sure() {

            this.dispatch('Picker', 'ok', this.date);
        },
        change: function change(target, current) {
            switch (target) {

                case 'year':
                    var lastYear = this.yearList.length - 1;
                    if (current.index > this.yearList.length - 1) {
                        this.date.year = this.yearList[lastYear];
                        this.currentYear = this.yearList[lastYear].code;
                    } else {
                        this.date.year = current;
                        this.currentYear = current.code;
                    }

                    //                        !!this.monthList ? this.currentMonth = this.monthList[0].code : '';
                    //                        !!this.dayList ? this.currentDay = this.dayList[0].code : '';


                    break;

                case 'month':
                    var lastMonth = this.monthList.length - 1;

                    if (current.index > this.monthList.length - 1) {
                        this.date.month = this.monthList[lastMonth];
                        this.currentMonth = this.monthList[lastMonth].code;
                    } else {
                        this.date.month = current;
                        this.currentMonth = current.code;
                    }

                    //                        !!this.dayList ? this.currentDay = this.dayList[0].code : '';

                    break;

                case 'day':
                    var lastDay = this.dayList.length - 1;

                    if (current.index > this.dayList.length - 1) {
                        this.date.day = this.dayList[lastDay];
                        this.currentDay = this.dayList[lastDay].code;
                    } else {
                        this.date.day = current;
                        this.currentDay = current.code;
                    }

                    break;
            }

            this.date.formatDate = [this.currentYear, this.currentMonth, this.currentDay].join(this.valueSeparator);
        }
    },
    computed: {
        yearList: function yearList() {
            var from = void 0,
                to = 0;
            if (!!this.year) {
                from = 1900;
                to = new Date().getFullYear();
                if (Array.isArray(this.year)) {

                    if (this.year[0] !== undefined) from = this.year[0] <= this.year[1] ? this.year[0] : from;
                    if (this.year[1] !== undefined) to = this.year[0] <= this.year[1] ? this.year[1] : to;
                }

                var yearArr = [];
                var index = 0;
                for (var i = from; i <= to; i++) {
                    var y = String(i);
                    yearArr.push({
                        code: i,
                        value: y,
                        index: index,
                        target: 'year'
                    });

                    index++;
                }

                return yearArr;
            }

            return false;
        },
        monthList: function monthList() {
            var from = void 0,
                to = 0;
            if (!!this.month) {
                from = 1;
                to = 12;
                if (Array.isArray(this.month)) {

                    if (this.month[0] !== undefined) from = this.month[0] >= 1 && this.month[0] < this.month[1] ? this.month[0] : 1;
                    if (this.month[1] !== undefined) to = this.month[1] <= 12 && this.month[0] < this.month[1] ? this.month[1] : 12;
                }

                var monthArr = [];
                var index = 0;
                for (var i = from; i <= to; i++) {
                    var m = String(i);
                    monthArr.push({
                        code: i,
                        value: m,
                        index: index,
                        target: 'month'
                    });

                    index++;
                }

                return monthArr;
            }

            return false;
        },
        dayList: function dayList() {
            var from = void 0,
                to = 0;
            if (!!this.day) {
                from = 1;
                to = 31;

                if (!!this.currentMonth) {
                    var total = void 0;

                    if (!!~DAYS[30].indexOf(this.currentMonth)) {
                        total = 30;
                    } else if (!!~DAYS[31].indexOf(this.currentMonth)) {
                        total = 31;
                    } else {
                        var year = this.currentYear;
                        if (year % 4 === 0 && (year % 100 != 0 || year % 400 === 0)) {
                            total = 29;
                        } else {
                            total = 28;
                        }
                    }

                    to = total;
                }

                if (Array.isArray(this.day)) {

                    if (this.day[0] !== undefined) from = this.day[0] >= 1 && this.day[0] < this.day[1] ? this.day[0] : 1;
                    if (this.day[1] !== undefined) to = this.day[1] <= 31 && this.day[0] < this.day[1] ? this.day[1] : 31;
                }

                var dayArr = [];
                var index = 0;
                for (var i = from; i <= to; i++) {
                    var d = String(i);
                    dayArr.push({
                        code: i,
                        value: d,
                        index: index,
                        target: 'day'
                    });
                    index++;
                }
                return dayArr;
            }

            return false;
        }
    }

};

/***/ }),

/***/ 244:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = { render: function render() {
    var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;
    return _c('div', {
      staticClass: "vlc-date-picker"
    }, [_c('div', {
      staticClass: "header"
    }, [_c('div', {
      staticClass: "left",
      on: {
        "click": _vm.cancle
      }
    }, [_vm._v("取消")]), _vm._v(" "), _c('div', {
      staticClass: "right",
      on: {
        "click": _vm.sure
      }
    }, [_vm._v("确定")])]), _vm._v(" "), _c('div', {
      staticClass: "main"
    }, [_vm.year ? _c('picker-slot', {
      attrs: {
        "list": _vm.yearList,
        "init-item": _vm.currentYear,
        "target": "year"
      },
      on: {
        "change": _vm.change
      }
    }) : _vm._e(), _vm._v(" "), _vm.month ? _c('picker-slot', {
      attrs: {
        "list": _vm.monthList,
        "init-item": _vm.currentMonth,
        "target": "month"
      },
      on: {
        "change": _vm.change
      }
    }) : _vm._e(), _vm._v(" "), _vm.day ? _c('picker-slot', {
      attrs: {
        "list": _vm.dayList,
        "init-item": _vm.currentDay,
        "target": "day"
      },
      on: {
        "change": _vm.change
      }
    }) : _vm._e()], 1)]);
  }, staticRenderFns: [] };

/***/ }),

/***/ 248:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(22)();
// imports


// module
exports.push([module.i, "", ""]);

// exports


/***/ }),

/***/ 249:
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(248);
if(typeof content === 'string') content = [[module.i, content, '']];
// add the styles to the DOM
var update = __webpack_require__(23)(content, {});
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(false) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("!!../../../../node_modules/css-loader/index.js!../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"id\":\"data-v-136d3c78\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../node_modules/less-loader/index.js!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./date-picker.vue", function() {
			var newContent = require("!!../../../../node_modules/css-loader/index.js!../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"id\":\"data-v-136d3c78\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../node_modules/less-loader/index.js!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./date-picker.vue");
			if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ })

});