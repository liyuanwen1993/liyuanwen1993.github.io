webpackJsonpvlc([2],{

/***/ 236:
/***/ (function(module, exports, __webpack_require__) {

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(243),
  /* template */
  __webpack_require__(245),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),

/***/ 238:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _defineProperty2 = __webpack_require__(5);

var _defineProperty3 = _interopRequireDefault(_defineProperty2);

var _assign = __webpack_require__(3);

var _assign2 = _interopRequireDefault(_assign);

var _util = __webpack_require__(2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var prefixCls = 'vlc-picker-slot'; //
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

exports.default = {
    data: function data() {
        return {
            count: 7, //默认显示行数
            height: 35,
            current: {},
            translateY: 0,
            currentTranslateY: 0,
            dragging: false,
            startX: 0,
            startY: 0,
            delta: { x: 0, y: 0 }
        };
    },

    watch: {
        list: function list(value) {

            if (value.length) {
                var index = this.getSelectedIndex();

                this.current = (0, _assign2.default)({}, this.current, value[index]);
                this.$emit('change', this.target, this.current);
            } else {
                this.translateY = 0;
            }
        },
        initItem: function initItem(value) {

            if (!value) {
                this.current = (0, _assign2.default)({}, this.current, {
                    code: '',
                    target: this.target,
                    index: '',
                    value: ''
                });
                this.$emit('change', this.target, this.current);
            } else {
                this.scrollToItem(value);
            }
        }
    },

    mounted: function mounted() {

        if (!this.initItem && this.initItem !== 0) {
            this.current = (0, _assign2.default)({}, this.current, { code: '', target: this.target, index: '', value: '' });
            this.$emit('change', this.target, this.current);
        } else {

            this.scrollToItem(this.initItem);
        }
    },

    props: {
        styles: Object,
        list: {
            type: Array,
            default: function _default() {
                return [];
            }
        },
        align: {
            type: String,
            default: 'center'
        },
        target: {
            type: String,
            required: true
        },
        initItem: {
            type: [String, Number],
            default: ''
        }
    },
    computed: {
        classes: function classes() {
            return ['' + prefixCls];
        },
        draggingClass: function draggingClass() {
            return [(0, _defineProperty3.default)({}, prefixCls + '-dragging', this.dragging)];
        },

        wrapperHeight: {
            get: function get() {
                return this.count * this.height;
            }
        },
        getStyles: function getStyles() {
            var styles = this.styles;

            if (styles.height) {

                this.height = styles.height / this.count;
            }

            return (0, _assign2.default)({}, styles, { height: this.wrapperHeight });
        }
    },
    methods: {
        _onTouchStart: function _onTouchStart(e) {
            e.preventDefault();
            e.stopPropagation();
            this.currentTranslateY = this.translateY;
            this.startX = e.touches[0].pageX;
            this.startY = e.touches[0].pageY;
            this.dragging = true;
        },
        _onTouchMove: function _onTouchMove(e) {
            e.preventDefault();
            e.stopPropagation();
            this.delta.x = e.touches[0].pageX - this.startX;
            this.delta.y = e.touches[0].pageY - this.startY;
            this.translateY = this.delta.y + this.currentTranslateY;
        },
        _onTouchEnd: function _onTouchEnd(e) {
            e.preventDefault();
            e.stopPropagation();
            this.dragging = false;
            this.currentTranslateY = this.translateY;
            var index = this.getSelectedIndex();
            this.setSelectedItem(index);
        },
        getSelectedIndex: function getSelectedIndex() {
            var height = this.height;
            var maxIndex = this.list.length - 1;
            var index = -Math.round(this.currentTranslateY / height);
            index = Math.max(index, 0);
            index = Math.min(index, maxIndex);
            return index;
        },
        setSelectedItem: function setSelectedItem(index) {

            this.translateY = this.currentTranslateY = -index * this.height;
            try {

                this.current = (0, _assign2.default)({}, this.current, {
                    code: this.list[index].code,
                    value: this.list[index].value,
                    target: this.target,
                    index: index
                });
            } catch (e) {

                this.current = (0, _assign2.default)({}, this.current, {
                    code: '',
                    value: '',
                    target: this.target,
                    index: ''
                });
            }

            this.$emit('change', this.target, this.current);
        },
        scrollToItem: function scrollToItem(code) {
            var _this = this;

            var parent = (0, _util.findComponentUpward)(this, 'AreaPicker');
            this.list.forEach(function (item, i) {
                var currentCode = item.code;
                var currentValue = item.value;
                currentCode = !!parent ? currentCode : currentValue;
                if (currentCode == code) {
                    _this.currentTranslateY = _this.translateY;
                    _this.setSelectedItem(i);
                }
            });
        }
    }
};

/***/ }),

/***/ 239:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = { render: function render() {
    var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;
    return _c('div', {
      class: _vm.classes,
      style: _vm.styles
    }, [_c('ul', {
      class: _vm.draggingClass,
      style: {
        transform: "translate3d(0," + _vm.translateY + "px,0)"
      },
      on: {
        "touchstart": _vm._onTouchStart,
        "touchmove": _vm._onTouchMove,
        "touchend": _vm._onTouchEnd
      }
    }, [_c('li', {
      style: {
        height: _vm.height + 'px'
      }
    }), _vm._v(" "), _c('li', {
      style: {
        height: _vm.height + 'px'
      }
    }), _vm._v(" "), _vm._l(_vm.list, function (item, index) {
      return _c('li', {
        class: {
          'current': index == _vm.current.index,
          'level_1_1': index - _vm.current.index == 1,
          'level_2_1': index - _vm.current.index == 2,
          'level_3_1': index - _vm.current.index >= 3,
          'level_1': index - _vm.current.index == -1,
          'level_2': index - _vm.current.index == -2,
          'level_3': index - _vm.current.index <= -3
        },
        style: {
          textAlign: _vm.align,
          height: _vm.height + 'px'
        }
      }, [_vm._v(_vm._s(item.value) + "\n\n\n\n        ")]);
    }), _vm._v(" "), _c('li', {
      style: {
        height: _vm.height + 'px'
      }
    }), _vm._v(" "), _c('li', {
      style: {
        height: _vm.height + 'px'
      }
    })], 2)]);
  }, staticRenderFns: [] };

/***/ }),

/***/ 240:
/***/ (function(module, exports, __webpack_require__) {

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(238),
  /* template */
  __webpack_require__(239),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),

/***/ 243:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _defineProperty2 = __webpack_require__(5);

var _defineProperty3 = _interopRequireDefault(_defineProperty2);

var _assign = __webpack_require__(3);

var _assign2 = _interopRequireDefault(_assign);

var _emitter = __webpack_require__(21);

var _emitter2 = _interopRequireDefault(_emitter);

var _pickerSlot = __webpack_require__(240);

var _pickerSlot2 = _interopRequireDefault(_pickerSlot);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

exports.default = {
    name: 'NormalPicker',
    props: {
        list: {
            type: Array,
            default: function _default() {
                return [];
            }
        },
        initArr: {
            type: Array,
            default: function _default() {
                return [];
            }
        }

    },
    mixins: [_emitter2.default],
    data: function data() {
        return {
            initItems: !!this.initArr.length ? this.initArr : this.list.map(function (item) {
                return item.list[0].value;
            }),
            normal: {}
        };
    },

    methods: {
        cancle: function cancle() {
            this.dispatch('Picker', 'fail');
        },
        sure: function sure() {
            this.dispatch('Picker', 'ok', this.normal);
        },
        change: function change(target, current) {

            for (var i = 0; i < this.shadowList.length; i++) {

                if (this.shadowList[i].target == target) {

                    for (var j = 0; i < this.shadowList[i].length; j++) {

                        if (current.code == this.shadowList[i].list[j].code) {
                            this.$set(this.initItems, i, this.shadowList[i].list[j].code);
                            break;
                        }
                    }
                }
            }
            this.normal = (0, _assign2.default)({}, this.normal, (0, _defineProperty3.default)({}, target, current));
        }
    },
    computed: {
        shadowList: function shadowList() {
            var list = this.list;
            for (var i = 0, listLength = list.length; i < listLength; i++) {

                if (list[i].hasOwnProperty('list') && list[i].list.length) {

                    for (var j = 0, childLength = list[i].list.length; j < childLength; j++) {

                        if (!list[i].list[j].hasOwnProperty('value')) return [];

                        if (!list[i].list[j].hasOwnProperty('code')) {
                            list[i].list[j].code = list[i].list[j].value;
                        }

                        if (!list[i].list[j].hasOwnProperty('target')) {
                            list[i].list[j].target = list[i].target;
                        }

                        list[i].list[j].index = j;
                    }
                }
            }

            return list;
        }
    },

    components: {
        PickerSlot: _pickerSlot2.default
    },
    watch: {
        initValue: function initValue(val) {
            this.initItems = val;
        }
    }
};

/***/ }),

/***/ 245:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = { render: function render() {
    var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;
    return _c('div', {
      staticClass: "vlc-normal-picker"
    }, [_c('div', {
      staticClass: "header"
    }, [_c('div', {
      staticClass: "left",
      on: {
        "click": _vm.cancle
      }
    }, [_vm._v("取消")]), _vm._v(" "), _c('div', {
      staticClass: "right",
      on: {
        "click": _vm.sure
      }
    }, [_vm._v("确定")])]), _vm._v(" "), _c('div', {
      staticClass: "main"
    }, [_vm.shadowList.length ? _vm._l(_vm.shadowList, function (item, key) {
      return _c('picker-slot', {
        key: item.target,
        attrs: {
          "target": item.target,
          "init-item": _vm.initItems[key],
          "list": item.list
        },
        on: {
          "change": _vm.change
        }
      });
    }) : _vm._e()], 2)]);
  }, staticRenderFns: [] };

/***/ })

});